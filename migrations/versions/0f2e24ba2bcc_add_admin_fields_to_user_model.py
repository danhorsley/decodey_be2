"""Add admin fields to User model

Revision ID: 0f2e24ba2bcc
Revises: 
Create Date: 2025-03-19 08:08:24.296349

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0f2e24ba2bcc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('daily_challenge')
    op.drop_table('speedrun_config')
    with op.batch_alter_table('game_score', schema=None) as batch_op:
        batch_op.drop_column('difficulty')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_admin', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('admin_password_hash', sa.String(length=256), nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('admin_password_hash')
        batch_op.drop_column('is_admin')

    with op.batch_alter_table('game_score', schema=None) as batch_op:
        batch_op.add_column(sa.Column('difficulty', sa.VARCHAR(), autoincrement=False, nullable=True))

    op.create_table('speedrun_config',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('config_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('time_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('difficulty', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='speedrun_config_pkey'),
    sa.UniqueConstraint('config_name', name='speedrun_config_config_name_key')
    )
    op.create_table('daily_challenge',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('challenge_date', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quote_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('major_attribution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('minor_attribution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('difficulty', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='daily_challenge_pkey'),
    sa.UniqueConstraint('challenge_date', name='daily_challenge_challenge_date_key')
    )
    # ### end Alembic commands ###
