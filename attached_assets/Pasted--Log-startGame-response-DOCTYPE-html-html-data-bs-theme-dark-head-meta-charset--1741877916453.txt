[Log] startGame response – "<!DOCTYPE html>↵<html data-bs-theme=\"dark\">↵<head>↵    <meta charset=\"UTF-8\">↵    <meta name=\"viewport\" content=\"width=device-width…" (bundle.js, line 72886)
"<!DOCTYPE html>
<html data-bs-theme=\"dark\">
<head>
    <meta charset=\"UTF-8\">
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
    <title>Uncrypt Game</title>
    <link rel=\"stylesheet\" href=\"https://cdn.replit.com/agent/bootstrap-agent-dark-theme.min.css\">
</head>
<body>
    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">
        <div class=\"container\">
            <a class=\"navbar-brand\" href=\"/\">Uncrypt</a>
            <div class=\"navbar-nav\">
                <a class=\"nav-link\" href=\"/leaderboard\">Leaderboard</a>
                <a class=\"nav-link\" href=\"/stats\">Stats</a>
                <a class=\"nav-link\" href=\"/logout\" id=\"logout\">Logout</a>
            </div>
        </div>
    </nav>

    <div class=\"container mt-4\">
        
<div class=\"row justify-content-center\">
    <div class=\"col-md-6\">
        <div class=\"card\">
            <div class=\"card-body\">
                <h2 class=\"card-title text-center\">Login</h2>
                <form id=\"loginForm\">
                    <div class=\"mb-3\">
                        <label for=\"username\" class=\"form-label\">Username or Email</label>
                        <input type=\"text\" class=\"form-control\" id=\"username\" required>
                    </div>
                    <div class=\"mb-3\">
                        <label for=\"password\" class=\"form-label\">Password</label>
                        <input type=\"password\" class=\"form-control\" id=\"password\" required>
                    </div>
                    <div class=\"mb-3 form-check\">
                        <input type=\"checkbox\" class=\"form-check-input\" id=\"remember\">
                        <label class=\"form-check-label\" for=\"remember\">Remember me</label>
                    </div>
                    <button type=\"submit\" class=\"btn btn-primary w-100\">Login</button>
                </form>
                <p class=\"text-center mt-3\">
                    <a href=\"/register\">Register new account</a>
                </p>
            </div>
        </div>
    </div>
</div>

<!-- Active Game Modal -->
<div class=\"modal fade\" id=\"activeGameModal\" tabindex=\"-1\">
    <div class=\"modal-dialog\">
        <div class=\"modal-content\">
            <div class=\"modal-header\">
                <h5 class=\"modal-title\">Active Game Found</h5>
                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>
            </div>
            <div class=\"modal-body\">
                <div class=\"active-game-stats\"></div>
            </div>
            <div class=\"modal-footer\">
                <button type=\"button\" class=\"btn btn-secondary\" id=\"abandonGame\">Start Fresh Game</button>
                <button type=\"button\" class=\"btn btn-primary\" id=\"continueGame\">Continue Game</button>
            </div>
        </div>
    </div>
</div>

<script>
document.getElementById('loginForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;
    const remember = document.getElementById('remember').checked;

    try {
        const response = await fetch('/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ username, password, remember })
        });

        const data = await response.json();

        if (response.ok) {
            console.log('Login successful, storing tokens');

            // Log tokens for verification
            console.log('Access Token:', data.access_token);
            console.log('Refresh Token:', data.refresh_token);

            // Parse JWT token to show claims
            const tokenPayload = JSON.parse(atob(data.access_token.split('.')[1]));
            console.log('Token Claims:', tokenPayload);

            // Store the tokens in localStorage
            localStorage.setItem('access_token', data.access_token);
            if (data.refresh_token) {
                localStorage.setItem('refresh_token', data.refresh_token);
            }

            // Check for active game immediately after successful login
            const gameCheckResponse = await fetch('/check-active-game', {
                headers: {
                    'Authorization': `Bearer ${data.access_token}`
                }
            });

            if (gameCheckResponse.ok) {
                const gameData = await gameCheckResponse.json();
                console.log('Active game check response:', gameData);

                if (gameData.has_active_game) {
                    console.log('Active game found, showing modal');
                    // Show active game stats in modal
                    const stats = gameData.game_stats;
                    const statsHtml = `
                        <p>You have an unfinished game:</p>
                        <ul>
                            <li>Difficulty: ${stats.difficulty}</li>
                            <li>Mistakes: ${stats.mistakes}/${stats.max_mistakes}</li>
                            <li>Progress: ${stats.completion_percentage}%</li>
                            <li>Time spent: ${Math.floor(stats.time_spent / 60)}m ${stats.time_spent % 60}s</li>
                        </ul>
                        <p>Would you like to continue this game or start a new one?</p>
                    `;
                    document.querySelector('.active-game-stats').innerHTML = statsHtml;

                    // Initialize and show modal
                    const modalEl = document.getElementById('activeGameModal');
                    const modal = new bootstrap.Modal(modalEl);
                    modal.show();
                    return;
                } else {
                    console.log('No active game found, redirecting to game page');
                    window.location.href = '/game';
                }
            } else {
                console.error('Failed to check active game:', await gameCheckResponse.text());
                window.location.href = '/game';
            }
        } else {
            alert(data.msg || 'Login failed');
        }
    } catch (error) {
        console.error('Error during login:', error);
        alert('Error during login');
    }
});

// Handle continue game
document.getElementById('continueGame').addEventListener('click', () => {
    window.location.href = '/game?continue=true';
});

// Handle abandon game
document.getElementById('abandonGame').addEventListener('click', async () => {
    try {
        await fetch('/abandon-game', {
            headers: {
                'Authorization': `Bearer ${localStorage.getItem('access_token')}`
            }
        });
        window.location.href = '/game';
    } catch (error) {
        console.error('Error abandoning game:', error);
        window.location.href = '/game';  // Redirect anyway
    }
});
</script>

    </div>

    <script>
    // Add common function for authenticated requests
    async function makeAuthenticatedRequest(url, options = {}) {
        const token = localStorage.getItem('access_token');
        if (!token) {
            window.location.href = '/';
            return;
        }

        const defaultOptions = {
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        };

        const finalOptions = {...defaultOptions, ...options};
        if (options.headers) {
            finalOptions.headers = {...defaultOptions.headers, ...options.headers};
        }

        try {
            const response = await fetch(url, finalOptions);
            if (response.status === 401) {
                // Token expired or invalid
                localStorage.removeItem('access_token');
                localStorage.removeItem('refresh_token');
                window.location.href = '/';
                return;
            }
            return response;
        } catch (error) {
            console.error('Request failed:', error);
            throw error;
        }
    }
    </script>
    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"></script>
</body>
</html>"